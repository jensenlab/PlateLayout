U
L +(n-1)/2
L+(n-1)/2+U
X <- (L+(n-1)/2+U)/n
X
plot(X,xlim(c(0,1)),ylim(c(0,1)))
plot(X,xlim=c(0,1),ylim=c(0,1))
abline(h=c((l+(n-1)/2)/n,1)
)
abline(v=c((l+(n-1)/2)/n,1))
?qbeta
qbeta(1:10,1,1)
qbeta(1:10,3,2)
qbeta(0:0.1:1,3,2)
0:0.1:1
0:1:0.1
0:10/10
qbeta(0:10/10,3,2)
install.packages(maps)
"maps"
install.packages("maps")
library(maps)
map("state",fill=T,plot=F)
map("state",fill=T,plot=T)
?maps
choose(81,7)
choose(81,7)*(1/36)^7*(35/36)^74
choose(81,12)*(1/36)^12*(35/36)^69
library(ggplot2)
simdata <- read.csv("2022_05_11_lambda_sim_500data.csv")
origdata <- read.csv("orig_design_data.csv")
simdata$loglambda <- log(simdata$lambda)
simdata$avg_phiq <- (simdata$neg_phiq+simdata$pos_phiq)/2
simdata$avg_var <- (simdata$neg_var+simdata$pos_var)/2
origdata$avg_phiq <- (origdata$neg_phiq+origdata$pos_phiq)/2
origdata$avg_var <- (origdata$neg_var+origdata$pos_var)/2
plot1 <- ggplot(simdata,aes(x=avg_var,y=avg_phiq,color=loglambda))+
geom_point()+
theme_classic()+
xlab("Average variance")+
ylab("Average PhiQ Score")+
geom_hline(yintercept=222.58)+
geom_vline(xintercept=0.2666667)
plot1
n <- 100
X <- matrix(seq(0,10,length=n),ncol=1)
View(X)
install.packages("plgp")
D <- distance(X)
library(plgp)
install.packages("plgp")
D <- plgp::distance(X)
View(D)
eps <- sqrt(.Machine$double.eps)
Sigma <- exp(-D)+diag(epx,n)
Sigma <- exp(-D)+diag(eps,n)
install.packages("mvtnorm")
install.packages("mvtnorm")
library(mvtnorm)
Y <- rmvnorm(1,sigma=Sigma)
plot(X,Y,type='l')
plot(cars)
install.packages("xfun")
library(xfun)
xfun::embed_file{"Biotin_Distribution_Analysis.csv"}
xfun::embed_file("Biotin_Distribution_Analysis.csv")
xfun::embed_files("Biotin_Distribution_Analysis.csv",
"12-4-20 Raw Data.csv",
"1_6_21_raw_data.csv",
"rRNA dep 9-29-21 data.csv",
"2021-1-8-Bead Volume Optimization.csv",
"rRNA dep 3-2-22.csv")
xfun::embed_files(c("Biotin_Distribution_Analysis.csv",
"12-4-20 Raw Data.csv",
"1_6_21_raw_data.csv",
"rRNA dep 9-29-21 data.csv",
"2021-1-8-Bead Volume Optimization.csv",
"rRNA dep 3-2-22.csv"))
?xfun::embed_files
xfun::embed_files(c("Biotin_Distribution_Analysis.csv",
"12-4-20 Raw Data.csv",
"1_6_21_raw_data.csv",
"rRNA dep 9-29-21 data.csv",
"2021-1-8-Bead Volume Optimization.csv",
"rRNA dep 3-2-22.csv"),
name="rRNA_Depletion_Optimization_Data.zip")
library(rsm)
library(ggplot2)
library(svglite)
xfun::embed_files(c("Biotin_Distribution_Analysis.csv",
"12-4-20 Raw Data.csv",
"1_6_21_raw_data.csv",
"rRNA dep 9-29-21 data.csv",
"2021-1-8-Bead Volume Optimization.csv",
"rRNA dep 3-2-22.csv"),
name="data.zip")
Red="#d7191c"
LightRed="C36464"
Orange="#fdae61"
Yellow="#ffffbf"
LightBlue="#abd9e9"
Blue="#2c7bb6"
Gray="#717D7E"
dep <- read.csv("rRNA dep 3-2-22.csv")
dep$delta16 <- dep$X16s-dep$ldh
dep$delta23 <- dep$X23s-dep$ldh
dep$fold16 <- 2^-(dep$delta16-dep$delta16neg)*100
dep$fold23 <- 2^-(dep$delta23-dep$delta23neg)*100
dep$depletion16 <- 100-dep$fold16
dep$depletion23 <- 100-dep$fold23
dep$foldmean16 <- dep$fold16/(nrow(dep)/3)
dep$foldmean23 <- dep$fold23/(nrow(dep)/3)
origdep <- dep[4:9,] ## Take only the rows relevant for this experiment
origdep$method <- factor(origdep$method,levels=c("StewartR","StewartH"))
font_size=8
font="Arial"
line_size=.4
point_size=0.6
plot_orig16 <- ggplot(data=origdep,aes(x=method,y=fold16))+
theme_classic(base_size=font_size,base_family = font,base_line_size=line_size)+
geom_col(aes(x=method,y=foldmean16),width=0.5,color=Gray,fill=Gray)+
geom_jitter(width=0.25,height=0,size=point_size)+
ylab("Abundance (%)")+
xlab(NULL)+
ylim(0,100)+
scale_x_discrete(labels=c(
"StewartR"="original \n beads",
"StewartH"="hydrophillic \n beads"
))
plot_orig23 <- ggplot(data=origdep,aes(x=method,y=fold23))+
theme_classic(base_size=font_size,base_family = font,base_line_size=line_size)+
geom_col(aes(x=method,y=foldmean23),width=0.5,color=Gray,fill=Gray)+
geom_jitter(width=0.25,height=0,size=point_size)+
#ylab("23s rRNA Depletion (%)")+
ylab(NULL)+
xlab(NULL)+
ylim(0,100)+
scale_x_discrete(labels=c(
"StewartR"="original \n beads",
"StewartH"="hydrophillic \n beads"
))
width_factor=0.479 #needed to account for the y axis label. number found by trial and error
cowplot::plot_grid(plot_orig16,plot_orig23,rel_widths = c(1-width_factor,width_factor))
design_12_4_20 <- read.csv("12-4-20 Raw Data.csv")[,c(1:5,8)]
design_12_4_20$Probe_16s_Coded <- round(design_12_4_20$Probe_16s_Coded,0)
design_12_4_20$Probe_23s_Coded <- round(design_12_4_20$Probe_23s_Coded,0)
knitr::kable(design_12_4_20,"latex")
design_12_4_20$Abundance <- 100-design_12_4_20$Depletion
knitr::kable(design_12_4_20,"latex")
design_12_4_20 <- read.csv("12-4-20 Raw Data.csv")[,c(1:5,8)]
design_12_4_20$Probe_16s_Coded <- round(design_12_4_20$Probe_16s_Coded,0)
design_12_4_20$Probe_23s_Coded <- round(design_12_4_20$Probe_23s_Coded,0)
knitr::kable(design_12_4_20,"latex")
rRNA_dep <- ccd(Depletion~Probe+RNA+Bead,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(Probe~(probes-500)/(300/1.682),
RNA~(totalRNA-250)/(150/1.682),
Bead~(beads-100)/(50/1.682)))
rRNA_dep$Probe_Coded <- round(rRNA_dep$Probe,0)
rRNA_dep$RNA_Coded <- round(rRNA_dep$RNA,0)
rRNA_dep$Bead_Coded <- round(rRNA_dep$Bead,0)
rRNA_dep$Probe_Mass <- round(rRNA_dep$Probe*(300/1.682)+500,0)
rRNA_dep$RNA_Mass <- round(rRNA_dep$RNA*(150/1.682)+250,0)
rRNA_dep$Bead_Mass <- round(rRNA_dep$Bead*(50/1.682)+100,0)
rRNA_dep
rRNA_dep$Abundance <- c(69.17,1356.98,24.43,559.69,23.36,646.81,10.00,114.19,115.38,183.34,176.01,4.31,903.89,472.40,53.23,523.93,169.35)
rRNA_dep$Depletion <- 100-rRNA_dep$Abundance
rRNA_dep$run=c(1:nrow(rRNA_dep))
round(rRNA)
SOrRNA_dep <- rsm(Abundance ~ SO(Probe,RNA,Bead),data=rRNA_dep)
summary(SOrRNA_dep)
k=length(SOrRNA_dep$coefficients)-1
SSE=sum(SOrRNA_dep$residuals^2)
n=length(SOrRNA_dep$residuals)
RSE=sqrt(SSE/(n-(1+k)))
par(mfrow=c(2,2))
contour(SOrRNA_dep, ~ Probe+RNA+Bead)
plot(SOrRNA_dep)
par (mfrow=c(2,2))
persp(SOrRNA_dep, ~ Probe+RNA+Bead, zlab="% Abundance", contours=list(z="bottom"))
rRNA_dep$Predicted <- predict(SOrRNA_dep)
#knitr::kable(rRNA_dep[, c(14,7:12,6)],"latex")
View(rRNA_dep)
rRNA_dep$Predicted <- predict(SOrRNA_dep)
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
rRNA_dep$Predicted <- round(predict(SOrRNA_dep),digits=2
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
rRNA_dep$Predicted <- round(predict(SOrRNA_dep),digits=2)
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.03,
stat="negmean",
show_stat=FALSE)
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.03,
stat="negmean",
show_stat=FALSE,
size_transform=NULL)
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.1,
stat="negmean",
show_stat=FALSE,
size_transform=NULL)
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.2,
stat="negmean",
show_stat=FALSE,
size_transform=NULL)
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.3,
stat="negmean",
show_stat=FALSE,
size_transform=NULL)
negmean <- function(x){
y=-mean(x)
return(y)
}
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.2,
stat="negmean",
show_stat=FALSE,
size_transform=NULL)
xfun::embed_files(c("Biotin_Distribution_Analysis.csv",
"12-4-20 Raw Data.csv",
"1_6_21_raw_data.csv",
"rRNA dep 9-29-21 data.csv",
"2021-1-8-Bead Volume Optimization.csv",
"rRNA dep 3-2-22.csv"),
name="data.zip")
?doetools::farplot
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.03,
stat="negmean",
show_stat=FALSE,
size_transform=NULL,
prediction_pch=15)
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.2,
stat="negmean",
show_stat=FALSE,
size_transform=NULL,
prediction_pch=15)
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.2,
stat="negmean",
show_stat=FALSE,
size_transform=NULL,
prediction_pch=15)
plot_fig2_1 <- doetools::farplot(SOrRNA_dep,
response_color=Blue,
prediction_color=Orange,
factor_colors=c("black","white","black"),
factor_fills=c("white","black","black"),
response_size=0.75,
zero_size=0.2,
stat="negmean",
show_stat=FALSE,
size_transform=NULL,
prediction_pch=15)
rRNA_dep$Predicted <- round(predict(SOrRNA_dep),digits=2)
knitr::kable(rRNA_dep[, c(14,7:12,13,15)],"latex")
knitr::kable(design_12_4_20,"latex")
rRNA_dep <- ccd(Depletion~Probe+RNA+Bead,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(Probe~(probes-500)/(300/1.682),
RNA~(totalRNA-250)/(150/1.682),
Bead~(beads-100)/(50/1.682)))
rRNA_dep$Probe_Coded <- round(rRNA_dep$Probe,0)
rRNA_dep$RNA_Coded <- round(rRNA_dep$RNA,0)
rRNA_dep$Bead_Coded <- round(rRNA_dep$Bead,0)
rRNA_dep$Probe_Mass <- round(rRNA_dep$Probe*(300/1.682)+500,0)
rRNA_dep$RNA_Mass <- round(rRNA_dep$RNA*(150/1.682)+250,0)
rRNA_dep$Bead_Mass <- round(rRNA_dep$Bead*(50/1.682)+100,0)
rRNA_dep$Abundance <- c(69.17,1356.98,24.43,559.69,23.36,646.81,10.00,114.19,115.38,183.34,176.01,4.31,903.89,472.40,53.23,523.93,169.35)
rRNA_dep$Depletion <- 100-rRNA_dep$Abundance
rRNA_dep$run=c(1:nrow(rRNA_dep))
round(rRNA)
SOrRNA_dep <- rsm(Abundance ~ SO(Probe,RNA,Bead),data=rRNA_dep)
library(rsm)
rRNA_dep <- ccd(Depletion~Probe+RNA+Bead,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(Probe~(probes-500)/(300/1.682),
RNA~(totalRNA-250)/(150/1.682),
Bead~(beads-100)/(50/1.682)))
rRNA_dep$Probe_Coded <- round(rRNA_dep$Probe,0)
rRNA_dep$RNA_Coded <- round(rRNA_dep$RNA,0)
rRNA_dep$Bead_Coded <- round(rRNA_dep$Bead,0)
rRNA_dep$Probe_Mass <- round(rRNA_dep$Probe*(300/1.682)+500,0)
rRNA_dep$RNA_Mass <- round(rRNA_dep$RNA*(150/1.682)+250,0)
rRNA_dep$Bead_Mass <- round(rRNA_dep$Bead*(50/1.682)+100,0)
rRNA_dep$Abundance <- c(69.17,1356.98,24.43,559.69,23.36,646.81,10.00,114.19,115.38,183.34,176.01,4.31,903.89,472.40,53.23,523.93,169.35)
rRNA_dep$Depletion <- 100-rRNA_dep$Abundance
rRNA_dep$run=c(1:nrow(rRNA_dep))
round(rRNA)
SOrRNA_dep <- rsm(Abundance ~ SO(Probe,RNA,Bead),data=rRNA_dep)
k=length(SOrRNA_dep$coefficients)-1
summary(SOrRNA_dep)
sqrt(deviance(SOrRNA_dep)/df.residual(SOrRNA_dep))
library(DispenseFormulatrix)
library(rsm)
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(RNA-500)/(300/1.682),
B~(Temp-250)/(150/1.682),
C~(Time-100)/(50/1.682)))
View(design)
View(design)
View(design)
design <- assign_wells(design)
View(design)
design <- ccd(Y~A+B+C,
n0=c(3,0),
randomize=FALSE,
oneblock=TRUE,
alpha='rotatable',
coding=list(A~(RNA-500)/(300/1.682),
B~(Temp-250)/(150/1.682),
C~(Time-100)/(50/1.682)))
design <- assign_wells(design)
reagent_names <- c("A","B","C")
volume_levels <- list(c(1,1,1,1,1),c(6,7,8,9,10),c(1,2,3,4,5))
separate_stocks <- c(T,T,F)
dispense_group <- c(1,2,1)
test_process <- process_design(design,reagent_names,volume_levels,separate_stocks,dispense_group)
setwd("~/Documents/GitHub/PlateLayout")
library(ggplot2)
read.csv("plate_operations_rollout_benchmark.csv")
data <- read.csv("plate_operations_rollout_benchmark.csv")
View(data)
data$nsims==100
opts <- data$nsims[data$nsims==1]
opts
data$nsims
opts <- data$nsims[data$nsims==100]
names(data)
rep(1:10,3)
rep(1:10,each=3)
data <- read.csv("plate_operations_rollout_benchmark.csv")
opts <- data$operations[data$nsims==100]
data$opt=rep(opts,each=5)
View(data)
order(data$opt)
seq <- order(opts)
opts <- data$operations[data$nsims==100]
seq <- order(opts,rev=T)
help(order)
seq <- order(opts,decreasing=T)
seq <- order(opts,decreasing=F)
opts[seq]
opts <- data$operations[data$nsims==100]
seq <- order(opts,decreasing=F)
data$opt=rep(opts,each=5)
data$order <- rep(seq,each=5)
View(data)
ggplot(data=data)+
geom_point(aes(x=order,y=operations,color=nsims))
data$nsims=as.factor(data$nsims)
ggplot(data=data)+
geom_point(aes(x=order,y=operations,color=nsims))
View(data)
max(data$operations)
order(data$operations,decreasing=T)
data$operations[334]
data$operations[order(data$operations)]
data$operations[order(data$operations,decreasing=T)]
order(data$operations,decreasing=T)
data$operations[334:351]
data$operations[326:351]
which.max(data$operations)
data <- read.csv("plate_operations_rollout_benchmark.csv")
seq <- order(opts,decreasing=F)
seq
data$order <- rep(seq,each=5)
View(data)
opts <- data$operations[data$nsims==100]
opts
sort(opts)
order(opts)
opts[1]
opts[order(opts))]
opts[order(opts))
opts[order(opts)]
opts[189]
opts
order(opts)[189]
order(opts)
1:1000[order(opts)]
c(1:1000)[order(opts)]
c(1:1000)[order(opts)]
order(order(opts))
data <- read.csv("plate_operations_rollout_benchmark.csv")
opts <- data$operations[data$nsims==100]
seq <- order(order(opts,decreasing=F))
data$opt=rep(opts,each=5)
data$order <- rep(seq,each=5)
data$nsims=as.factor(data$nsims)
ggplot(data=data)+
geom_point(aes(x=order,y=operations,color=nsims))
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))
data <- read.csv("plate_operations_rollout_benchmark.csv")
opts <- data$operations[data$nsims==100]
seq <- order(order(opts,decreasing=F))
data$opt=rep(opts,each=5)
data$order <- rep(seq,each=5)
data$nsims_fact=as.factor(data$nsims)
ggplot(data=data)+
geom_point(aes(x=order,y=operations,color=nsims_fact))+
theme_classic()+
xlab("Run")+
ylab("Number of Required Pipette Operations")
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))
ggplot(data=data)+
geom_point(aes(x=log(nsims),y=log(time)))
model <- lm(time~nsims,data=data)
summary(model)
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))
model <- lm(time~nsims,data=data)
summary(model)
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))+
geom_smooth(aes(x=nims,y=time),method="lm")
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))+
geom_smooth(aes(x=nims,y=time),method=lm)
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))+
geom_smooth(aes(x=nsims,y=time),method=lm)
ggplot(data=data)+
geom_point(aes(x=nsims,y=time))+
geom_smooth(aes(x=nsims,y=time),method=lm,se=T)
